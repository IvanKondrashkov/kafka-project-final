services:
  x-kafka-common:
    &kafka-common
    image: confluentinc/cp-kafka:7.4.4
    environment:
      &kafka-common-env
      # Cluster Configuration
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

      # SSL settings
      KAFKA_SSL_KEYSTORE_TYPE: JKS
      KAFKA_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_SSL_TRUSTSTORE_PASSWORD: password
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      # SASL settings
      KAFKA_ZOOKEEPER_SET_ACL: true
      KAFKA_ZOOKEEPER_SASL_CLIENT: true
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL,OUTBOUND:SASL_SSL
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/config/kafka_server_jaas.conf"
    networks:
      - kafka-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    hostname: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    volumes:
      - ./kafka-creds/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
      - ./kafka-certs/kafka-0:/etc/zookeeper/secrets
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dzookeeper.authProvider.sasl=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -Dzookeeper.requireClientAuthScheme=sasl
    networks:
      - kafka-net

  kafka-0:
    <<: *kafka-common
    container_name: kafka-0
    hostname: kafka-0
    depends_on:
      - zookeeper
    ports:
      - "127.0.0.1:9094:9094"
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-0:9092,OUTBOUND://localhost:9094
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-0_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-0_sslkey_creds
    volumes:
      - kafka_0_data:/kafka
      - ./kafka-certs/kafka-0:/etc/kafka/secrets
      - ./kafka-creds/kafka_server_jaas.conf:/etc/kafka/config/kafka_server_jaas.conf
      - ./kafka-creds/admin.properties:/etc/kafka/secrets/admin.properties
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 --command-config /etc/kafka/secrets/admin.properties"]
      interval: 5s
      timeout: 10s
      retries: 12

  kafka-1:
    <<: *kafka-common
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "127.0.0.1:9095:9095"
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-1:9092,OUTBOUND://localhost:9095
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
    volumes:
      - kafka_1_data:/kafka
      - ./kafka-certs/kafka-1:/etc/kafka/secrets
      - ./kafka-creds/kafka_server_jaas.conf:/etc/kafka/config/kafka_server_jaas.conf
      - ./kafka-creds/admin.properties:/etc/kafka/secrets/admin.properties

  kafka-2:
    <<: *kafka-common
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "127.0.0.1:9096:9096"
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-2:9092,OUTBOUND://localhost:9096
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
    volumes:
      - kafka_2_data:/kafka
      - ./kafka-certs/kafka-2:/etc/kafka/secrets
      - ./kafka-creds/kafka_server_jaas.conf:/etc/kafka/config/kafka_server_jaas.conf
      - ./kafka-creds/admin.properties:/etc/kafka/secrets/admin.properties

  kafka-acls:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      kafka-0:
        condition: service_healthy
    volumes:
      - ./kafka-certs/kafka-0:/etc/kafka/secrets
      - ./kafka-creds/kafka_server_jaas.conf:/etc/kafka/config/kafka_server_jaas.conf
      - ./kafka-creds/admin.properties:/etc/kafka/secrets/admin.properties
      - ./kafka-creds/kafka_entrypoint.sh:/kafka_entrypoint.sh
    command: /kafka_entrypoint.sh
    networks:
      - kafka-net

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.4
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "127.0.0.1:8081:8081"
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: SASL_SSL://kafka-0:9092,SASL_SSL://kafka-1:9092,SASL_SSL://kafka-2:9092
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";'
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: password
    volumes:
      - ./kafka-certs/kafka-0:/etc/kafka/secrets
      - ./kafka-creds/kafka_entrypoint.sh:/kafka_entrypoint.sh
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 15s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.0
    container_name: kafka-ui
    hostname: kafka-ui
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
      - schema-registry
    environment:
      KAFKA_CLUSTERS_0_NAME: secure-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-0:9092,kafka-1:9092,kafka-2:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_PROPERTIES_PROTOCOL: SASL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: password
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY_AUTH_TYPE: BASIC
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY_AUTH_USERNAME: admin
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY_AUTH_PASSWORD: admin-secret
      DYNAMIC_CONFIG_ENABLED: true
      AUTH_TYPE: LOGIN_FORM
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin
    volumes:
      - ./kafka-certs/kafka-0:/etc/kafka/secrets
    networks:
      - kafka-net

  kafka-connect:
    build:
      context: ./kafka-connect
    ports:
      - "8083:8083"
      - "9875:9875"
      - "9876:9876"
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-0:9092,kafka-1:9092,kafka-2:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "kafka-connect"

      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"

      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config-storage'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offset-storage'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status-storage'

      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";'
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: password

      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";'
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: password

      CONNECT_ELASTICSEARCH_SECURITY_PROTOCOL: PLAINTEXT
      CONNECT_ELASTICSEARCH_SSL_ENABLED: "false"
      CONNECT_ELASTICSEARCH_HTTP_COMPRESSION: "true"
      CONNECT_ELASTICSEARCH_CONNECTION_TIMEOUT_MS: "5000"
      CONNECT_ELASTICSEARCH_READ_TIMEOUT_MS: "10000"

      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_ENCODING: "UTF-8"

      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"

      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081/'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081/'

      # Export JMX metrics to :9876/metrics for Prometheus
      KAFKA_JMX_PORT: "9875"
      KAFKA_OPTS: "-javaagent:/opt/jmx_prometheus_javaagent-0.15.0.jar=9876:/opt/kafka-connect.yml"

      # Read connection password from file
      CONNECT_CONFIG_PROVIDERS: "file"
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: "org.apache.kafka.common.config.provider.FileConfigProvider"

      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
    volumes:
      - ./kafka-certs/kafka-0:/etc/kafka/secrets
      - ./confluent-hub-components/:/etc/kafka-connect/jars
      - ./kafka-connect/config/:/etc/kafka-connect/config/
    networks:
      - kafka-net

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
    links:
      - kafka-connect
    networks:
      - kafka-net

  grafana:
    build:
      context: ./grafana
    ports:
      - "3000:3000"
    networks:
      - kafka-net

  elasticsearch:
    image: bitnami/elasticsearch:8.15.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - NODE_NAME=elasticsearch
      - XPACK_SECURITY_ENABLED=false
      - DISCOVERY_TYPE=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - kafka-net

  hadoop-namenode:
    image: apache/hadoop:3.4.1
    container_name: hadoop-namenode
    hostname: hadoop-namenode
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2g"
    shm_size: 10G
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - ./hadoop/config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/config/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/namenode_entrypoint.sh:/namenode_entrypoint.sh
    networks:
      - kafka-net
    entrypoint: ["/bin/bash", "/namenode_entrypoint.sh"]
    command: ["hdfs", "namenode"]

  hadoop-datanode-1:
    image: apache/hadoop:3.4.1
    container_name: hadoop-datanode-1
    hostname: hadoop-datanode-1
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2g"
    shm_size: 10G
    ports:
      - "9864:9864"
      - "9970:9970"
    depends_on:
      - hadoop-namenode
    volumes:
      - ./hadoop/config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/config/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    networks:
      - kafka-net
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]

  spark-master:
    image: bitnami/spark:3.5.6
    ports:
      - "8085:8085"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_MASTER_WEBUI_PORT=8085
    volumes:
      - ./kafka-certs/kafka-0:/kafka-certs
      - ./spark/jars:/opt/bitnami/spark/jars
    networks:
      - kafka-net

  spark-worker:
    image: bitnami/spark:3.5.6
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_WEBUI_PORT=8086
    volumes:
      - ./kafka-certs/kafka-0:/kafka-certs
      - ./spark/jars:/opt/bitnami/spark/jars
    networks:
      - kafka-net

  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    image: gateway-app
    container_name: gateway-app-ct
    restart: unless-stopped
    ports:
      - "8070:8070"
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
      - schema-registry
      - shop-api
      - filter-api
      - client-api
    networks:
      - kafka-net

  shop-api:
    build:
      context: ../shop-api
      dockerfile: Dockerfile
    image: shop-api-app
    container_name: shop-api-app-ct
    restart: unless-stopped
    ports:
      - "8071:8071"
    depends_on:
      schema-registry:
        condition: service_healthy
    volumes:
      - ./kafka-certs/kafka-0:/kafka-certs
    networks:
      - kafka-net

  filter-api:
    build:
      context: ../filter-api
      dockerfile: Dockerfile
    image: filter-api-app
    container_name: filter-api-app-ct
    restart: unless-stopped
    ports:
      - "8072:8072"
    depends_on:
      - shop-api
    volumes:
      - ./kafka-certs/kafka-0:/kafka-certs
    networks:
      - kafka-net

  client-api:
    build:
      context: ../client-api
      dockerfile: Dockerfile
    image: client-api-app
    container_name: client-api-app-ct
    restart: unless-stopped
    ports:
      - "8073:8073"
    depends_on:
      - shop-api
    volumes:
      - ./kafka-certs/kafka-0:/kafka-certs
    networks:
      - kafka-net

  analytics-api:
    build:
      context: ../analytics-api
      dockerfile: Dockerfile
    image: analytics-api-app
    container_name: analytics-api-app-ct
    restart: unless-stopped
    ports:
      - "8074:8074"
    depends_on:
      - client-api
      - hadoop-namenode
      - spark-master
    volumes:
      - ./kafka-certs/kafka-0:/kafka-certs
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
    name: kafka-network

volumes:
  kafka_0_data:
    driver: local
  kafka_1_data:
    driver: local
  kafka_2_data:
    driver: local
  elasticsearch_data:
    driver: local